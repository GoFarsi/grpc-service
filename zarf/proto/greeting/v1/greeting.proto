syntax = "proto3";
package zarf.proto.greeting.v1;
option go_package = "github.com/GoFarsi/grpc-service/zarf/gen/greeting/v1;greeting";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Greeting Service";
    version: "1.0";
    contact: {
      name: "GoFarsi";
      url: "https://gofarsi.ir";
      email: "info@gofarsi.ir";
    };
  };
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token with prefixed Bearer"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }

  schemes: HTTPS;
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
};


service GreetingService {
  rpc Greeting(GreetingRequest) returns(GreetingResponse) {}
}

service UserService {
  rpc CreateUser(CreateUserRequest) returns(User) {}
}

message GreetingRequest {
  string name = 1;
}

message GreetingResponse {
  string message = 1;
}

message User {
  int32 id = 1;
  string first_name = 2;
  string last_name = 3;
  int32  age = 4;
}

message CreateUserRequest {
  string first_name = 1;
  string last_name = 2;
  int32  age = 3;
}